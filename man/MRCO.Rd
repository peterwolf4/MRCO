% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MRCO.R
\name{MRCO}
\alias{MRCO}
\title{Multi Resolution Cluster Optimization}
\usage{
MRCO(
  metadata = NULL,
  metadata_column_name = NULL,
  prefix = NULL,
  suffix = NULL,
  metadata_column_nbins = NULL,
  plot_col_gradient = NULL,
  suggest_cut = FALSE,
  edge_num_size_filter = 0,
  edge_prop_size_filter = 0.05,
  branches_overflow = 50000,
  nodes_selection = NULL,
  merge_downwards = FALSE,
  plot = TRUE,
  no_labels = FALSE,
  highlight_selection = TRUE,
  silent = FALSE,
  warnings = TRUE,
  igraph_layout_type = "tree",
  edge_ratio_weigth = 0.9
)
}
\arguments{
\item{metadata}{data.frame or tibble with dim-names: row names cell identities and column names cell level metadata variables}

\item{metadata_column_name}{character or tidy-selection style unquoted name of a metadata column to plot piechart nodes from}

\item{prefix}{character, prefix of metadata columns which contain the increments of resolution}

\item{suffix}{character, suffix of metadata columns which contain the increments of resolution}

\item{metadata_column_nbins}{NULL, "all" or a numeric, set the number of bins to create from given metadata column if it is continuous data}

\item{plot_col_gradient}{NULL for auto detect, or logical, TRUE to use continuous fill, FALSE for discrete fill; only applies when continuous metadata column is selected}

\item{suggest_cut}{logical, TRUE to suggest stable nodes based on graph structure, FALSE to skip}

\item{edge_num_size_filter}{numeric, give the number of cells that must be surpassed to draw edge, has to be set for each data set as its highly dependent on nr of cells within data}

\item{edge_prop_size_filter}{numeric, give the proportion of cells that must move between nodes to draw edge}

\item{branches_overflow}{numeric giving the max number of paths through the graph that is checked for each resolution step to protect memory overflow}

\item{nodes_selection}{vector or list, two ways to manually select a node by its global id from the graph:
either give resolution step and cluster id from that resolution as underscore separated character string,
 or give a list named where each name corresponds to a resolution step and its element is a single vector containing the cluster ids that are to be selected of that resolution.}

\item{merge_downwards}{logical, cells which are in multiple selected clusters can either be assorted into the first or last cluster available for them.
FALSE means that clusters are merged from the bottom towards the top of the graph, hence cells which are part of a higher resolution cluster will remain in it.
TRUE means that clusters are merged from top towards the bottom, hence cells will end up in the lowest resolution cluster that they may end in.}

\item{plot}{logical, FALSE to skip plotting}

\item{no_labels}{logical, TRUE to turn off cluster labels, FALSE default for labeled clusters}

\item{highlight_selection}{logical, TRUE to highlight selected nodes}

\item{silent}{logical, TRUE to suppress messages}

\item{warnings}{logical, FALSE to suppress warnings}

\item{igraph_layout_type}{character giving the igraph layout type for graph creation; either "tree" or "sugiyama"}

\item{edge_ratio_weigth}{numeric between 0 and 1, when stable edges are determined their edge ratio must be larger than the branch paths maximum edge ratio timed edge_ratio_weight.
Therefore, a value closer to 1 is less permissive towards noise, whereas a value closer to 0 may handle noisier graphs better.}
}
\value{
list, contains the graph layout. May contain selected nodes, the resulting clustering and the ggplot object if respective functions are used.
}
\description{
MRCO visualizes clustering results of different resolutions in a treelike graph to directly show differences in sample compositions and give an intuitive solution to choosing the best amount of clusters for your experiment.
MRCO uses multiple initial clusterings of any algorithm which were individually created iterating though some form of a resolution tuning parameter.
Next to the clustering resolutions, metadata may also contain columns regarding other sample level information that might help evaluation on whether or not sub-clustering of a certain cluster is necessary or not.
Additionally to the build in automated stable cluster suggestion one can choose to select clusters manually to easily receive a custom clustering for downstream analysis.
}
\examples{
if (requireNamespace("utils")){
    data(example_data)
    #Plot Clusters as Treelike Graph. Use the prefix to select clustering columns.
    MRCO(example_data, prefix="0.")
    # Piechart plot both discrete ...
    MRCO(example_data, metadata_column_name="quality", prefix="0.")
    # ... and continuous sample level metadata.
    MRCO(example_data, "expr_A", prefix="0.")
    # Select your clusters manually at wish.
    # Each node is pasted by its resolution step (Y axis) and its cluster NR.
    # The top node is called 0_1, the bottom leafs are 4_1, 4_2, 4_3, 4_0 etc.
    # Either select by named list or character vector.
    MRCO(example_data, "batch", prefix="0.",
         nodes_selection=list("3"=c(1, 0),
                              "4"=c(2, 3)))
    MRCO_res <- MRCO(example_data, prefix="0.",
                     nodes_selection=c("2_0","4_3"))

    # Find the selection & adjust it at wish.
    MRCO_res$selected_nodes
    #Any sample not selected end up in a 'debris' cluster
    head(MRCO_res$MRCO_clustering)
}
}
\author{
Peter Wolf
}
